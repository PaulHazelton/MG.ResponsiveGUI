# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    #   - uses: actions/checkout@v3
    #   - name: Setup .NET
    #     uses: actions/setup-dotnet@v3
    #     with:
    #       dotnet-version: 6.0.x
    #   - name: Restore dependencies
    #     run: dotnet restore
    #   - name: Build
    #     run: dotnet build --no-restore
    #   - name: Test
    #     run: dotnet test --no-build --verbosity normal

      - name: Build MonoGame project
        # You may pin to the exact commit or the version.
        # uses: igotinfected-ci/build-monogame@9317f27298266101efa9dea378e04cfa2f774751
        uses: igotinfected-ci/build-monogame@v2.0.3
        with:
          # .NET version to set up `dotnet` with. Defaults to `3.1.x`.
          dotnet-version: 6.0.x
          # Path to the `.sln`. Used to restore NuGet packages from.
          solution-path: '${{ github.workspace }}\MG.ResponsiveGUI.sln'

          # Path to the `Content.mgcb` file for a specific project. Used to build the MonoGame content files.
          # Note: this may not be required in future releases.
          content-mgcb-path: '${{ github.workspace }}\GuiSample\Content'

          # Platform to build Content files for. E.g.: `Android`.
        #   content-mgcb-platform: 
            
          # Path to the `.csproj` to build with. This is passed to `msbuild` to initiate the build.
          csproj-path: '.\GuiSample'
          # The `msbuild` target to use. E.g.: `PackageForAndroid`.
        #   build-target: 
          # The `msbuild` build configuration to use. Defaults to `Release`.
        #   build-configuration: # default is Release